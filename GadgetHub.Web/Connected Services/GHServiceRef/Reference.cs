//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GadgetHub.Web.GHServiceRef {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDTO", Namespace="http://schemas.datacontract.org/2004/07/GadgetHub.Service")]
    [System.SerializableAttribute()]
    public partial class UserDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/GadgetHub.Service")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProductDTO", Namespace="http://schemas.datacontract.org/2004/07/GadgetHub.Service")]
    [System.SerializableAttribute()]
    public partial class ProductDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DistributorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistributorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IsActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> StockField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DistributorId {
            get {
                return this.DistributorIdField;
            }
            set {
                if ((this.DistributorIdField.Equals(value) != true)) {
                    this.DistributorIdField = value;
                    this.RaisePropertyChanged("DistributorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistributorName {
            get {
                return this.DistributorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistributorNameField, value) != true)) {
                    this.DistributorNameField = value;
                    this.RaisePropertyChanged("DistributorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> IsActive {
            get {
                return this.IsActiveField;
            }
            set {
                if ((this.IsActiveField.Equals(value) != true)) {
                    this.IsActiveField = value;
                    this.RaisePropertyChanged("IsActive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Stock {
            get {
                return this.StockField;
            }
            set {
                if ((this.StockField.Equals(value) != true)) {
                    this.StockField = value;
                    this.RaisePropertyChanged("Stock");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CartItemDTO", Namespace="http://schemas.datacontract.org/2004/07/GadgetHub.Service")]
    [System.SerializableAttribute()]
    public partial class CartItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Qty {
            get {
                return this.QtyField;
            }
            set {
                if ((this.QtyField.Equals(value) != true)) {
                    this.QtyField = value;
                    this.RaisePropertyChanged("Qty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuotationDTO", Namespace="http://schemas.datacontract.org/2004/07/GadgetHub.Service")]
    [System.SerializableAttribute()]
    public partial class QuotationDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> DistributorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DistributorNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GadgetHub.Web.GHServiceRef.QuotationItemDTO[] ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QuotationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DistributorId {
            get {
                return this.DistributorIdField;
            }
            set {
                if ((this.DistributorIdField.Equals(value) != true)) {
                    this.DistributorIdField = value;
                    this.RaisePropertyChanged("DistributorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DistributorName {
            get {
                return this.DistributorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DistributorNameField, value) != true)) {
                    this.DistributorNameField = value;
                    this.RaisePropertyChanged("DistributorName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GadgetHub.Web.GHServiceRef.QuotationItemDTO[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> QuotationId {
            get {
                return this.QuotationIdField;
            }
            set {
                if ((this.QuotationIdField.Equals(value) != true)) {
                    this.QuotationIdField = value;
                    this.RaisePropertyChanged("QuotationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QuotationItemDTO", Namespace="http://schemas.datacontract.org/2004/07/GadgetHub.Service")]
    [System.SerializableAttribute()]
    public partial class QuotationItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderDTO", Namespace="http://schemas.datacontract.org/2004/07/GadgetHub.Service")]
    [System.SerializableAttribute()]
    public partial class OrderDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreatedAtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private GadgetHub.Web.GHServiceRef.OrderItemDTO[] ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TotalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreatedAt {
            get {
                return this.CreatedAtField;
            }
            set {
                if ((this.CreatedAtField.Equals(value) != true)) {
                    this.CreatedAtField = value;
                    this.RaisePropertyChanged("CreatedAt");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryAddress {
            get {
                return this.DeliveryAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryAddressField, value) != true)) {
                    this.DeliveryAddressField = value;
                    this.RaisePropertyChanged("DeliveryAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public GadgetHub.Web.GHServiceRef.OrderItemDTO[] Items {
            get {
                return this.ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemsField, value) != true)) {
                    this.ItemsField = value;
                    this.RaisePropertyChanged("Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderItemDTO", Namespace="http://schemas.datacontract.org/2004/07/GadgetHub.Service")]
    [System.SerializableAttribute()]
    public partial class OrderItemDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ProductIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> QtyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ProductId {
            get {
                return this.ProductIdField;
            }
            set {
                if ((this.ProductIdField.Equals(value) != true)) {
                    this.ProductIdField = value;
                    this.RaisePropertyChanged("ProductId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Qty {
            get {
                return this.QtyField;
            }
            set {
                if ((this.QtyField.Equals(value) != true)) {
                    this.QtyField = value;
                    this.RaisePropertyChanged("Qty");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ContactMessageDTO", Namespace="http://schemas.datacontract.org/2004/07/GadgetHub.Service")]
    [System.SerializableAttribute()]
    public partial class ContactMessageDTO : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> UserIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((this.TimestampField.Equals(value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GHServiceRef.IGadgetHubService")]
    public interface IGadgetHubService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/RegisterUser", ReplyAction="http://tempuri.org/IGadgetHubService/RegisterUserResponse")]
        bool RegisterUser(string firstName, string lastName, string phoneNumber, string username, string password, string email, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/RegisterUser", ReplyAction="http://tempuri.org/IGadgetHubService/RegisterUserResponse")]
        System.Threading.Tasks.Task<bool> RegisterUserAsync(string firstName, string lastName, string phoneNumber, string username, string password, string email, string role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/Login", ReplyAction="http://tempuri.org/IGadgetHubService/LoginResponse")]
        GadgetHub.Web.GHServiceRef.UserDTO Login(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/Login", ReplyAction="http://tempuri.org/IGadgetHubService/LoginResponse")]
        System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.UserDTO> LoginAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetCategories", ReplyAction="http://tempuri.org/IGadgetHubService/GetCategoriesResponse")]
        GadgetHub.Web.GHServiceRef.Category[] GetCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetCategories", ReplyAction="http://tempuri.org/IGadgetHubService/GetCategoriesResponse")]
        System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.Category[]> GetCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetProducts", ReplyAction="http://tempuri.org/IGadgetHubService/GetProductsResponse")]
        GadgetHub.Web.GHServiceRef.ProductDTO[] GetProducts(string searchTerm, int[] categoryIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetProducts", ReplyAction="http://tempuri.org/IGadgetHubService/GetProductsResponse")]
        System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.ProductDTO[]> GetProductsAsync(string searchTerm, int[] categoryIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/AddToCart", ReplyAction="http://tempuri.org/IGadgetHubService/AddToCartResponse")]
        void AddToCart(int userId, int productId, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/AddToCart", ReplyAction="http://tempuri.org/IGadgetHubService/AddToCartResponse")]
        System.Threading.Tasks.Task AddToCartAsync(int userId, int productId, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetCartItemCount", ReplyAction="http://tempuri.org/IGadgetHubService/GetCartItemCountResponse")]
        int GetCartItemCount(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetCartItemCount", ReplyAction="http://tempuri.org/IGadgetHubService/GetCartItemCountResponse")]
        System.Threading.Tasks.Task<int> GetCartItemCountAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetCartItems", ReplyAction="http://tempuri.org/IGadgetHubService/GetCartItemsResponse")]
        GadgetHub.Web.GHServiceRef.CartItemDTO[] GetCartItems(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetCartItems", ReplyAction="http://tempuri.org/IGadgetHubService/GetCartItemsResponse")]
        System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.CartItemDTO[]> GetCartItemsAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/UpdateCartItemQty", ReplyAction="http://tempuri.org/IGadgetHubService/UpdateCartItemQtyResponse")]
        void UpdateCartItemQty(int userId, int productId, int qtyChange);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/UpdateCartItemQty", ReplyAction="http://tempuri.org/IGadgetHubService/UpdateCartItemQtyResponse")]
        System.Threading.Tasks.Task UpdateCartItemQtyAsync(int userId, int productId, int qtyChange);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/RemoveCartItem", ReplyAction="http://tempuri.org/IGadgetHubService/RemoveCartItemResponse")]
        void RemoveCartItem(int userId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/RemoveCartItem", ReplyAction="http://tempuri.org/IGadgetHubService/RemoveCartItemResponse")]
        System.Threading.Tasks.Task RemoveCartItemAsync(int userId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/PlaceOrder", ReplyAction="http://tempuri.org/IGadgetHubService/PlaceOrderResponse")]
        bool PlaceOrder(int userId, string deliveryAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/PlaceOrder", ReplyAction="http://tempuri.org/IGadgetHubService/PlaceOrderResponse")]
        System.Threading.Tasks.Task<bool> PlaceOrderAsync(int userId, string deliveryAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetUsers", ReplyAction="http://tempuri.org/IGadgetHubService/GetUsersResponse")]
        GadgetHub.Web.GHServiceRef.UserDTO[] GetUsers(string roleFilter, string searchQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetUsers", ReplyAction="http://tempuri.org/IGadgetHubService/GetUsersResponse")]
        System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.UserDTO[]> GetUsersAsync(string roleFilter, string searchQuery);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/ToggleUserStatus", ReplyAction="http://tempuri.org/IGadgetHubService/ToggleUserStatusResponse")]
        void ToggleUserStatus(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/ToggleUserStatus", ReplyAction="http://tempuri.org/IGadgetHubService/ToggleUserStatusResponse")]
        System.Threading.Tasks.Task ToggleUserStatusAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetAllQuotations", ReplyAction="http://tempuri.org/IGadgetHubService/GetAllQuotationsResponse")]
        GadgetHub.Web.GHServiceRef.QuotationDTO[] GetAllQuotations();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetAllQuotations", ReplyAction="http://tempuri.org/IGadgetHubService/GetAllQuotationsResponse")]
        System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.QuotationDTO[]> GetAllQuotationsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetAllProducts", ReplyAction="http://tempuri.org/IGadgetHubService/GetAllProductsResponse")]
        GadgetHub.Web.GHServiceRef.ProductDTO[] GetAllProducts(string searchTerm, int[] categoryIds, System.Nullable<int> isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetAllProducts", ReplyAction="http://tempuri.org/IGadgetHubService/GetAllProductsResponse")]
        System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.ProductDTO[]> GetAllProductsAsync(string searchTerm, int[] categoryIds, System.Nullable<int> isActive);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetAllOrders", ReplyAction="http://tempuri.org/IGadgetHubService/GetAllOrdersResponse")]
        GadgetHub.Web.GHServiceRef.OrderDTO[] GetAllOrders();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetAllOrders", ReplyAction="http://tempuri.org/IGadgetHubService/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.OrderDTO[]> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetAllContactMessages", ReplyAction="http://tempuri.org/IGadgetHubService/GetAllContactMessagesResponse")]
        GadgetHub.Web.GHServiceRef.ContactMessageDTO[] GetAllContactMessages();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetAllContactMessages", ReplyAction="http://tempuri.org/IGadgetHubService/GetAllContactMessagesResponse")]
        System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.ContactMessageDTO[]> GetAllContactMessagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetOrdersByUserId", ReplyAction="http://tempuri.org/IGadgetHubService/GetOrdersByUserIdResponse")]
        GadgetHub.Web.GHServiceRef.OrderDTO[] GetOrdersByUserId(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetOrdersByUserId", ReplyAction="http://tempuri.org/IGadgetHubService/GetOrdersByUserIdResponse")]
        System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.OrderDTO[]> GetOrdersByUserIdAsync(int userId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetOrdersForDistributor", ReplyAction="http://tempuri.org/IGadgetHubService/GetOrdersForDistributorResponse")]
        GadgetHub.Web.GHServiceRef.OrderDTO[] GetOrdersForDistributor(int distributorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/GetOrdersForDistributor", ReplyAction="http://tempuri.org/IGadgetHubService/GetOrdersForDistributorResponse")]
        System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.OrderDTO[]> GetOrdersForDistributorAsync(int distributorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/UpdateOrderStatus", ReplyAction="http://tempuri.org/IGadgetHubService/UpdateOrderStatusResponse")]
        bool UpdateOrderStatus(int orderId, string newStatus);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGadgetHubService/UpdateOrderStatus", ReplyAction="http://tempuri.org/IGadgetHubService/UpdateOrderStatusResponse")]
        System.Threading.Tasks.Task<bool> UpdateOrderStatusAsync(int orderId, string newStatus);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGadgetHubServiceChannel : GadgetHub.Web.GHServiceRef.IGadgetHubService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GadgetHubServiceClient : System.ServiceModel.ClientBase<GadgetHub.Web.GHServiceRef.IGadgetHubService>, GadgetHub.Web.GHServiceRef.IGadgetHubService {
        
        public GadgetHubServiceClient() {
        }
        
        public GadgetHubServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GadgetHubServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GadgetHubServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GadgetHubServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool RegisterUser(string firstName, string lastName, string phoneNumber, string username, string password, string email, string role) {
            return base.Channel.RegisterUser(firstName, lastName, phoneNumber, username, password, email, role);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterUserAsync(string firstName, string lastName, string phoneNumber, string username, string password, string email, string role) {
            return base.Channel.RegisterUserAsync(firstName, lastName, phoneNumber, username, password, email, role);
        }
        
        public GadgetHub.Web.GHServiceRef.UserDTO Login(string email, string password) {
            return base.Channel.Login(email, password);
        }
        
        public System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.UserDTO> LoginAsync(string email, string password) {
            return base.Channel.LoginAsync(email, password);
        }
        
        public GadgetHub.Web.GHServiceRef.Category[] GetCategories() {
            return base.Channel.GetCategories();
        }
        
        public System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.Category[]> GetCategoriesAsync() {
            return base.Channel.GetCategoriesAsync();
        }
        
        public GadgetHub.Web.GHServiceRef.ProductDTO[] GetProducts(string searchTerm, int[] categoryIds) {
            return base.Channel.GetProducts(searchTerm, categoryIds);
        }
        
        public System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.ProductDTO[]> GetProductsAsync(string searchTerm, int[] categoryIds) {
            return base.Channel.GetProductsAsync(searchTerm, categoryIds);
        }
        
        public void AddToCart(int userId, int productId, int qty) {
            base.Channel.AddToCart(userId, productId, qty);
        }
        
        public System.Threading.Tasks.Task AddToCartAsync(int userId, int productId, int qty) {
            return base.Channel.AddToCartAsync(userId, productId, qty);
        }
        
        public int GetCartItemCount(int userId) {
            return base.Channel.GetCartItemCount(userId);
        }
        
        public System.Threading.Tasks.Task<int> GetCartItemCountAsync(int userId) {
            return base.Channel.GetCartItemCountAsync(userId);
        }
        
        public GadgetHub.Web.GHServiceRef.CartItemDTO[] GetCartItems(int userId) {
            return base.Channel.GetCartItems(userId);
        }
        
        public System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.CartItemDTO[]> GetCartItemsAsync(int userId) {
            return base.Channel.GetCartItemsAsync(userId);
        }
        
        public void UpdateCartItemQty(int userId, int productId, int qtyChange) {
            base.Channel.UpdateCartItemQty(userId, productId, qtyChange);
        }
        
        public System.Threading.Tasks.Task UpdateCartItemQtyAsync(int userId, int productId, int qtyChange) {
            return base.Channel.UpdateCartItemQtyAsync(userId, productId, qtyChange);
        }
        
        public void RemoveCartItem(int userId, int productId) {
            base.Channel.RemoveCartItem(userId, productId);
        }
        
        public System.Threading.Tasks.Task RemoveCartItemAsync(int userId, int productId) {
            return base.Channel.RemoveCartItemAsync(userId, productId);
        }
        
        public bool PlaceOrder(int userId, string deliveryAddress) {
            return base.Channel.PlaceOrder(userId, deliveryAddress);
        }
        
        public System.Threading.Tasks.Task<bool> PlaceOrderAsync(int userId, string deliveryAddress) {
            return base.Channel.PlaceOrderAsync(userId, deliveryAddress);
        }
        
        public GadgetHub.Web.GHServiceRef.UserDTO[] GetUsers(string roleFilter, string searchQuery) {
            return base.Channel.GetUsers(roleFilter, searchQuery);
        }
        
        public System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.UserDTO[]> GetUsersAsync(string roleFilter, string searchQuery) {
            return base.Channel.GetUsersAsync(roleFilter, searchQuery);
        }
        
        public void ToggleUserStatus(int userId) {
            base.Channel.ToggleUserStatus(userId);
        }
        
        public System.Threading.Tasks.Task ToggleUserStatusAsync(int userId) {
            return base.Channel.ToggleUserStatusAsync(userId);
        }
        
        public GadgetHub.Web.GHServiceRef.QuotationDTO[] GetAllQuotations() {
            return base.Channel.GetAllQuotations();
        }
        
        public System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.QuotationDTO[]> GetAllQuotationsAsync() {
            return base.Channel.GetAllQuotationsAsync();
        }
        
        public GadgetHub.Web.GHServiceRef.ProductDTO[] GetAllProducts(string searchTerm, int[] categoryIds, System.Nullable<int> isActive) {
            return base.Channel.GetAllProducts(searchTerm, categoryIds, isActive);
        }
        
        public System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.ProductDTO[]> GetAllProductsAsync(string searchTerm, int[] categoryIds, System.Nullable<int> isActive) {
            return base.Channel.GetAllProductsAsync(searchTerm, categoryIds, isActive);
        }
        
        public GadgetHub.Web.GHServiceRef.OrderDTO[] GetAllOrders() {
            return base.Channel.GetAllOrders();
        }
        
        public System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.OrderDTO[]> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public GadgetHub.Web.GHServiceRef.ContactMessageDTO[] GetAllContactMessages() {
            return base.Channel.GetAllContactMessages();
        }
        
        public System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.ContactMessageDTO[]> GetAllContactMessagesAsync() {
            return base.Channel.GetAllContactMessagesAsync();
        }
        
        public GadgetHub.Web.GHServiceRef.OrderDTO[] GetOrdersByUserId(int userId) {
            return base.Channel.GetOrdersByUserId(userId);
        }
        
        public System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.OrderDTO[]> GetOrdersByUserIdAsync(int userId) {
            return base.Channel.GetOrdersByUserIdAsync(userId);
        }
        
        public GadgetHub.Web.GHServiceRef.OrderDTO[] GetOrdersForDistributor(int distributorId) {
            return base.Channel.GetOrdersForDistributor(distributorId);
        }
        
        public System.Threading.Tasks.Task<GadgetHub.Web.GHServiceRef.OrderDTO[]> GetOrdersForDistributorAsync(int distributorId) {
            return base.Channel.GetOrdersForDistributorAsync(distributorId);
        }
        
        public bool UpdateOrderStatus(int orderId, string newStatus) {
            return base.Channel.UpdateOrderStatus(orderId, newStatus);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateOrderStatusAsync(int orderId, string newStatus) {
            return base.Channel.UpdateOrderStatusAsync(orderId, newStatus);
        }
    }
}
